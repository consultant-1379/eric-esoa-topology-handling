#
# COPYRIGHT Ericsson 2022
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#

modelVersion: 2.0

docker-images:
  - adp-release-auto: armdocker.rnd.ericsson.se/sandbox/adp-staging/adp-cicd/bob-adp-release-auto:latest

properties:
  - image-full-name: armdocker.rnd.ericsson.se/proj-orchestration-so/eric-oss-topo-trouble-mngmt-ui
  - image-full-name-topology-tools: armdocker.rnd.ericsson.se/proj-orchestration-so/eric-oss-cmn-topology-tools
  - helm-chart-name: eric-oss-topo-trouble-mngmt-ui
  - helm-chart-name-topology-tools: eric-oss-cmn-topology-tools
  - helm-chart-repo: https://arm.rnd.ki.sw.ericsson.se/artifactory/proj-so-gs-all-helm
  - seli-chart-repo: https://arm.seli.gic.ericsson.se/artifactory/proj-bdgsbet-staging-local/com/ericsson

env:
  - PWD
  - Version
  - USER_USERNAME
  - USER_PASSWORD
  - API_TOKEN (default=AKCp5dKss61rXH4KVzQDncn9mnMRbVxhKpmGKeNEUFTT2YHav88w6dm4Sn2SNuSq4RzuV6LoF)

var:
  - version-swap

rules:
  git-clean:
    - task: git-clean
      cmd: docker run --rm -v ${env.PWD}:/git armdocker.rnd.ericsson.se/dockerhub-ericsson-remote/alpine/git:v2.32.0 clean -xdff
  pull-files:
    - task: view-version
      cmd:
        - echo ${env.Version}
    - task: fetch-topology-ui-chart
      cmd:
        - curl -k -u ${env.USER_USERNAME}:${env.USER_PASSWORD} ${seli-chart-repo}/${env.Version}/${helm-chart-name}-${env.Version}.tgz -o ${helm-chart-name}-${env.Version}.tgz
        - curl -k -u ${env.USER_USERNAME}:${env.USER_PASSWORD} ${seli-chart-repo}/${env.Version}/${helm-chart-name}.tgz -o ${helm-chart-name}.tgz
        - curl -k -u ${env.USER_USERNAME}:${env.USER_PASSWORD} ${seli-chart-repo}/${env.Version}/${helm-chart-name-topology-tools}.tgz -o ${helm-chart-name-topology-tools}.tgz

  package:
    - task: unzip
      cmd: tar -xvf ${env.PWD}/${helm-chart-name}-${env.Version}.tgz
    - task: helm-package
      docker-image: adp-release-auto
      cmd: helm-package
        --folder ${helm-chart-name}
        --workdir .bob --output ${env.PWD}
        --version ${env.Version}

  publish:
    - task: helm-upload
      docker-image: adp-release-auto
      docker-flags:
        - --network host
      cmd: upload_file.sh
        --filename=${helm-chart-name}-${env.Version}.tgz
        --repository=${helm-chart-repo}/${helm-chart-name}/
        --api-token=${env.API_TOKEN}

  load-image:
    - task: load-image
      cmd:
        - docker load < ${helm-chart-name}.tgz
        - docker load < ${helm-chart-name-topology-tools}.tgz

  tag-image:
    - task: version-check
      cmd: echo ${env.Version} | sed 's/+/-/' > .bob/var.version-swap
    - task: tag-image
      cmd:
        - docker tag ${helm-chart-name}:${var.version-swap} ${image-full-name}:${var.version-swap}
        - docker tag ${helm-chart-name-topology-tools}:${var.version-swap} ${image-full-name-topology-tools}:${var.version-swap}

  push-image:
    - task: publish-image
      cmd:
        - docker push ${image-full-name}:${var.version-swap}
        - docker push ${image-full-name-topology-tools}:${var.version-swap}

  remove-image:
    - task: remove-image
      cmd:
        - docker rmi ${image-full-name}:${var.version-swap}
        - docker rmi ${image-full-name-topology-tools}:${var.version-swap}
        - docker rmi ${helm-chart-name}:${var.version-swap}

  init:
    - task: artifacts-properties
      docker-image: adp-release-auto
      cmd: generate-adp-artifacts
        --chart-name ${helm-chart-name}
        --chart-version ${env.Version}
        --chart-repo ${helm-chart-repo}
    - task: commit-info
      cmd:
        - echo "GIT_TAG=$(git log -1 --pretty=format:'%h')" >> artifact.properties
        - echo "GIT_COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')" >> artifact.properties
        - echo "GIT_AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae')" >> artifact.properties
        - echo "GIT_COMMIT_SUMMARY=$(git log -1 --pretty=format:'%s')" >> artifact.properties
